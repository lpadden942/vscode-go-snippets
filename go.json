{
	// Place your snippets for go here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Create package main and func main": {
		"prefix": "pm",
		"body": [
			"package main",
			"",
			"func main() {",
			"",
			"}"
		],
		"description": "create package main and function main in main.go"
	},
	"Template boilerplate": {
		"prefix": "tmp",
		"body": [
			"var tpl *template.Template",
			"",
			"func init() {",
			"",	
			"}"
		],
		"description": "boilerplate for creating an init function with templates"
	},
	"Template boilerplate with file": {
		"prefix": "tmpfile",
		"body": [
			"template.Must(template.ParseFiles())"
		],
		"description": "boilerplate for creating a template with ParseFiles"
	},
	"Template boilerplate with glob": {
		"prefix": "tmpglob",
		"body": [
			"template.Must(template.ParseGlob())"
		],
		"description": "boilerplate for creating a template with ParseGlob"
	},
	"Template boilerplate with file and function map": {
		"prefix": "tmpfilemap",
		"body": [
			"template.Must(template.New().Funcs().ParseFiles())"
		],
		"description": "boilerplate for creating a template with ParseFiles and function map"
	},
	"Template boilerplate with glob and function map": {
		"prefix": "tmpglobmap",
		"body": [
			"template.Must(template.New().Funcs().ParseGlob())"
		],
		"description": "boilerplate for creating a template with ParseGlob"
	}
}