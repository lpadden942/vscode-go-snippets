{
	"Create package main and func main": {
		"prefix": "pm",
		"body": [
			"package main",
			"",
			"func main() {",
			"",
			"}"
		],
		"description": "create package main and function main in main.go"
	},
	"Template boilerplate": {
		"prefix": "tmp",
		"body": [
			"var tpl *template.Template",
			"",
			"func init() {",
			"",	
			"}"
		],
		"description": "boilerplate for creating an init function with templates"
	},
	"Template boilerplate with file": {
		"prefix": "tmpfile",
		"body": [
			"template.Must(template.ParseFiles())"
		],
		"description": "boilerplate for creating a template with ParseFiles"
	},
	"Template boilerplate with glob": {
		"prefix": "tmpglob",
		"body": [
			"template.Must(template.ParseGlob())"
		],
		"description": "boilerplate for creating a template with ParseGlob"
	},
	"Template boilerplate with file and function map": {
		"prefix": "tmpfilemap",
		"body": [
			"template.Must(template.New().Funcs().ParseFiles())"
		],
		"description": "boilerplate for creating a template with ParseFiles and function map"
	},
	"Template boilerplate with glob and function map": {
		"prefix": "tmpglobmap",
		"body": [
			"template.Must(template.New().Funcs().ParseGlob())"
		],
		"description": "boilerplate for creating a template with ParseGlob"
	},
	"Execute template boilerplate": {
		"prefix": "et",
		"body": [
			"err := tpl.ExecuteTemplate(os.Stdout, name, data)"
		],
		"description": "shortcut for execute template code"
	},
	"log fatal error": {
		"prefix": "logferr",
		"body": [
			"if err != nil {",
			"	log.Fatalln(err)",
			"}"
		],
		"description": "shortcut for execute template code"
	}
}